stages:
  - build
  - test
  - deploy

build:
  stage: build
  image: docker:dind
  script:
    - cd ./nextjs_app
    - docker build -t rb07/events_app:$CI_PIPELINE_IID .
    - mkdir $CI_PROJECT_DIR/images
    - docker save -o $CI_PROJECT_DIR/images/events_app.tar rb07/events_app:$CI_PIPELINE_IID
  artifacts:    
    paths:
      - images/
  services:
    - docker:dind

test:
  stage: test
  image: docker:dind
  dependencies:
    - build
  script:
    - docker load -i $CI_PROJECT_DIR/images/events_app.tar
    - docker run rb07/events_app:$CI_PIPELINE_IID npm run test
    - echo "running unit tests..."

deploy:
  stage: deploy_app
  image: docker:dind
  services:
    - docker:dind
  dependencies:
    - build
  script:
    - docker load -i $CI_PROJECT_DIR/images/events_app.tar
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - docker push rb07/events_app:$CI_PIPELINE_IID
    - cd ./nextjs_app
    - docker run rb07/events_app:$CI_PIPELINE_IID & server_pid=$!
    - sleep 30
    - kill $server_pid
    - echo "Application successfully deployed"


